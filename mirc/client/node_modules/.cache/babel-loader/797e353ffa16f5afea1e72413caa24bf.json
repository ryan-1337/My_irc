{"ast":null,"code":"import _slicedToArray from \"/home/ryan/delivery/my_irc_r/mirc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ryan/delivery/my_irc_r/mirc/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Messages from '../Messages/Messages';\nimport NewRoom from '../NewRoom/NewRoom';\nimport Input from '../Input/Input';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newRoom = _useState6[0],\n        setNewRoom = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        messages = _useState10[0],\n        setMessages = _useState10[1];\n\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.seach]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  const createRoom = event => {\n    event.preventDefault();\n\n    if (newRoom) {\n      socket.emit('createRoom', newRoom, () => setRoom(''));\n    }\n  };\n\n  console.log(newRoom, setNewRoom);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"leftContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(NewRoom, {\n    newRoom: newRoom,\n    setNewRoom: setNewRoom,\n    createRoom: createRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/ryan/delivery/my_irc_r/mirc/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Messages","NewRoom","Input","socket","Chat","location","name","setName","room","setRoom","newRoom","setNewRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","seach","on","sendMessage","event","preventDefault","createRoom","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport InfoBar from '../InfoBar/InfoBar';\nimport Messages from '../Messages/Messages';\nimport NewRoom from '../NewRoom/NewRoom';\nimport Input from '../Input/Input';\n\nimport './Chat.css';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [newRoom, setNewRoom] = useState('');\n    const [message, setMessage] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        const {name, room} = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room}, () => {\n            \n        });\n\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n    }, [ENDPOINT, location.seach])\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message]);\n        })\n    }, [messages]);\n\n    const sendMessage = (event) => {\n     event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n    const createRoom = (event) => {\n     event.preventDefault();\n\n        if(newRoom) {\n            socket.emit('createRoom', newRoom, () => setRoom(''));\n        }\n    }\n\n    console.log(newRoom, setNewRoom)\n\n    return (\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <InfoBar room = {room} />\n                <Messages messages={messages} name={name} />\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n                <div className=\"leftContainer\">\n                    <NewRoom newRoom={newRoom} setNewRoom={setNewRoom}  createRoom={createRoom}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}